# Deploy an Openstack environment with a containerized overcloud
# using scenario002

undercloud_setup: true
network_isolation: false
overcloud_ipv6: false

# pacemaker settings are configured in the scenario template
# do not set `enable_pacemaker` in the featureset

containerized_overcloud: true
undercloud_generate_service_certificate: false

ssl_overcloud: false

step_introspect: false

composable_scenario: scenario002-multinode-containers.yaml
validate_template: scenario002-multinode.yaml

# options below direct automatic doc generation by tripleo-collect-logs
artcl_gen_docs: true
artcl_create_docs_payload:
  included_deployment_scripts:
    - undercloud-install
    - overcloud-custom-tht-script
    - overcloud-prep-containers
    - overcloud-prep-flavors
    - overcloud-prep-images
    - overcloud-prep-network
    - overcloud-deploy
    - overcloud-deploy-post
    - overcloud-upgrade
    - overcloud-validate
  included_static_docs:
    - env-setup-virt
  table_of_contents:
    - env-setup-virt
    - undercloud-install
    - overcloud-custom-tht-script
    - overcloud-prep-containers
    - overcloud-prep-flavors
    - overcloud-prep-images
    - overcloud-prep-network
    - overcloud-deploy
    - overcloud-deploy-post
    - overcloud-upgrade
    - overcloud-validate
composable_roles: true
overcloud_roles:
  - name: Controller
    CountDefault: 1
    tags:
      - primary
      - controller
    networks:
      - External
      - InternalApi
      - Storage
      - StorageMgmt
      - Tenant

# Use the traditional ping test in newton and ocata
# Run tempest in pike+

test_ping: >-
  {% if release in ['newton', 'ocata'] -%}
  true
  {%- else -%}
  false
  {%- endif -%}

run_tempest: >-
  {% if release in ['newton', 'ocata'] -%}
  false
  {%- else -%}
  true
  {%- endif -%}

test_regex: ''
tempest_whitelist:
  # Testing zaqar doesn't work yet, but it's in progress
  # - 'zaqar.tests.tempest_plugin.tests.v2.test_queues.TestManageQueue'
  # Testing boot from volume and server connectivity
  - 'tempest.scenario.test_volume_boot_pattern.TestVolumeBootPattern.test_volume_boot_pattern'
  # Testing swift
  - 'tempest.api.object_storage.test_object_services.ObjectTest'
  # Testing cinder volumes encrypted by barbican:
  - 'tempest.scenario.test_encrypted_cinder_volumes.TestEncryptedCinderVolumes'
  # TODO(emilien) run autoscaling tests when telemetry works in python-tempestconf
  # - 'ceilometer.tests.tempest.scenario.test_telemetry_integration.TestTelemetryIntegration'
  # TODO(emilien) run ec2api tests when ec2api is supported in python-tempestconf
  # - 'ec2api.tests.functional.api.test_key_pairs.KeyPairTest'
tempest_plugins:
  - python-aodh-tests
  - python-ceilometer-tests
  - python-gnocchi-tests
  - python-barbican-tests-tempest
  - python-zaqar-tests
  - python-ec2-api-tests
tempest_extra_config: >-
  {% if release not in ['newton', 'ocata', 'pike'] -%}
    {'compute-feature-enabled.attach_encrypted_volume': 'True', 'auth.tempest_roles': '"Member, creator"'}
  {%- endif -%}
